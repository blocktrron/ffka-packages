#!/usr/bin/lua

local uci = require('simple-uci').cursor()

local file = "/tmp/ffka_gw_unreach"
local offline_treshold = 2
local switch_time = 1534176227

-- Returns true if node was offline long enough to perform domain switch
function is_offline_treshold_reached(offline_treshold, file)
  if not path_exists(file) then
    return false
  end

  local fs = require 'nixio.fs'

  local current_epoch = os.time()
  local offline_treshold = offline_treshold * 60
  local offline_since = fs.readfile(file)
  local offline_duration = current_epoch - offline_since

  if offline_duration > offline_treshold then
    return true
  end
  return false
end

-- Switch only after switch-time has passed
if os.time() < switch_time then
  if not is_offline_treshold_reached(offline_treshold, file) then
    print("Switch time not reached.")
    return 0
  end
end

-- Decide target-domain based current domain
local current_domain = uci:get('gluon', 'core', 'domain')
local target_domain = nil
if current_domain == "ortl" then
  target_domain = "ort"
else if current_domain == "pfl" then
  target_domain = "pf01"
else
  -- In case no domain relation is found, abort
  print("No domain switch necessary.")
  return 0
end

print("Switching to domain "..target_domain..".")

-- Reconfigure node
print("Calling gluon-reconfigure.")
uci:set('gluon', 'core', 'domain', target_domain)
uci:commit('gluon')

-- Call gluon-reconfigure to apply domain settings
print("Calling gluon-reconfigure.")
local gluon_reconfigure_handle = io.popen("gluon-reconfigure")
gluon_reconfigure_handle:read('*all')
gluon_reconfigure_handle:close()

-- Reboot
print("Rebooting now.")
local reboot_handle = io.popen("reboot")
reboot_handle:close()
